<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2013r2

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns0="http://asset.cobielite.cobie.erdc.org" xmlns:ns1="http://assettype.cobielite.cobie.erdc.org" xmlns:ns2="http://attribute.cobielite.cobie.erdc.org" xmlns:ns3="http://cobielite.cobie.erdc.org" xmlns:cobielite="http://core.cobielite.cobie.erdc.org" xmlns:ns4="http://document.cobielite.cobie.erdc.org" xmlns:ns5="http://floor.cobielite.cobie.erdc.org" xmlns:ns6="http://issue.cobielite.cobie.erdc.org" xmlns:ns7="http://space.cobielite.cobie.erdc.org" xmlns:ns8="http://system.cobielite.cobie.erdc.org" xmlns:tbf="http://www.altova.com/MapForce/UDF/tbf" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:ns9="http://zone.cobielite.cobie.erdc.org" exclude-result-prefixes="ns0 ns1 ns2 ns3 ns4 ns5 ns6 ns7 ns8 tbf xs fn ns9">
	<xsl:template name="tbf:tbf1_IssueType">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@cobielite:externalEntityName">
			<xsl:attribute name="cobielite:externalEntityName" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:for-each select="$input/@cobielite:externalID">
			<xsl:attribute name="cobielite:externalID" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:for-each select="$input/@cobielite:externalSystemName">
			<xsl:attribute name="cobielite:externalSystemName" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:for-each select="$input/node()">
			<xsl:if test="fn:not(fn:boolean(self::text()))">
				<xsl:if test="fn:not(fn:boolean(self::*))">
					<xsl:sequence select="."/>
				</xsl:if>
			</xsl:if>
			<xsl:if test="fn:boolean(self::cobielite:IssueName)">
				<xsl:variable name="var1_resultof_cast" as="xs:string" select="fn:string(.)"/>
				<xsl:variable name="var2_resultof_node_name" as="xs:QName" select="fn:node-name(.)"/>
				<xsl:element name="{node-name(.)}" namespace="{namespace-uri(.)}">
					<xsl:sequence select="$var1_resultof_cast"/>
				</xsl:element>
			</xsl:if>
			<xsl:if test="fn:boolean(self::cobielite:IssueCategory)">
				<xsl:variable name="var3_resultof_cast" as="xs:string" select="fn:string(.)"/>
				<xsl:variable name="var4_resultof_node_name" as="xs:QName" select="fn:node-name(.)"/>
				<xsl:element name="{node-name(.)}" namespace="{namespace-uri(.)}">
					<xsl:sequence select="$var3_resultof_cast"/>
				</xsl:element>
			</xsl:if>
			<xsl:if test="fn:boolean(self::cobielite:IssueRiskText)">
				<xsl:variable name="var5_resultof_cast" as="xs:string" select="fn:string(.)"/>
				<xsl:variable name="var6_resultof_node_name" as="xs:QName" select="fn:node-name(.)"/>
				<xsl:element name="{node-name(.)}" namespace="{namespace-uri(.)}">
					<xsl:sequence select="$var5_resultof_cast"/>
				</xsl:element>
			</xsl:if>
			<xsl:if test="fn:boolean(self::cobielite:IssueSeverityText)">
				<xsl:variable name="var7_resultof_cast" as="xs:string" select="fn:string(.)"/>
				<xsl:variable name="var8_resultof_node_name" as="xs:QName" select="fn:node-name(.)"/>
				<xsl:element name="{node-name(.)}" namespace="{namespace-uri(.)}">
					<xsl:sequence select="$var7_resultof_cast"/>
				</xsl:element>
			</xsl:if>
			<xsl:if test="fn:boolean(self::cobielite:IssueImpactText)">
				<xsl:variable name="var9_resultof_cast" as="xs:string" select="fn:string(.)"/>
				<xsl:variable name="var10_resultof_node_name" as="xs:QName" select="fn:node-name(.)"/>
				<xsl:element name="{node-name(.)}" namespace="{namespace-uri(.)}">
					<xsl:sequence select="$var9_resultof_cast"/>
				</xsl:element>
			</xsl:if>
			<xsl:if test="fn:boolean(self::cobielite:IssueDescription)">
				<xsl:variable name="var11_resultof_cast" as="xs:string" select="fn:string(.)"/>
				<xsl:variable name="var12_resultof_node_name" as="xs:QName" select="fn:node-name(.)"/>
				<xsl:element name="{node-name(.)}" namespace="{namespace-uri(.)}">
					<xsl:sequence select="$var11_resultof_cast"/>
				</xsl:element>
			</xsl:if>
			<xsl:if test="fn:boolean(self::cobielite:ContactAssignment)">
				<xsl:element name="{node-name(.)}" namespace="{namespace-uri(.)}">
					<xsl:call-template name="tbf:tbf2_ContactKeyType">
						<xsl:with-param name="input" select="." as="node()"/>
					</xsl:call-template>
				</xsl:element>
			</xsl:if>
			<xsl:if test="fn:boolean(self::cobielite:IssueMitigationDescription)">
				<xsl:variable name="var13_resultof_cast" as="xs:string" select="fn:string(.)"/>
				<xsl:variable name="var14_resultof_node_name" as="xs:QName" select="fn:node-name(.)"/>
				<xsl:element name="{node-name(.)}" namespace="{namespace-uri(.)}">
					<xsl:sequence select="$var13_resultof_cast"/>
				</xsl:element>
			</xsl:if>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="tbf:tbf2_ContactKeyType">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/node()">
			<xsl:if test="fn:not(fn:boolean(self::text()))">
				<xsl:if test="fn:not(fn:boolean(self::*))">
					<xsl:sequence select="."/>
				</xsl:if>
			</xsl:if>
			<xsl:if test="fn:boolean(self::cobielite:ContactEmailReference)">
				<xsl:element name="{node-name(.)}" namespace="{namespace-uri(.)}">
					<xsl:sequence select="fn:string(.)"/>
				</xsl:element>
			</xsl:if>
		</xsl:for-each>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var1_Facility" as="node()?" select="ns3:Facility"/>
		<SystemOperation xmlns="http://operation250.lcie.cobielite.cobie.erdc.org" xmlns:att="http://attribute.lcie.cobielite.cobie.erdc.org" xmlns:con="http://contact.lcie.cobielite.cobie.erdc.org" xmlns:cobielite="http://core.cobielite.cobie.erdc.org" xmlns:doc="http://document.lcie.cobielite.cobie.erdc.org" xmlns:issue="http://issue.lcie.cobielite.cobie.erdc.org" xmlns:lcie="http://lcie.cobielite.cobie.erdc.org" xmlns:operation="http://operation250.defs.lcie.cobielite.cobie.erdc.org">
			<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance" select="'http://operation250.lcie.cobielite.cobie.erdc.org C:/Users/RDITLACB/git/cobieserver/COBieSchema/LCie/SubSchema/250_04_SystemOperation.xsd'"/>
			<operation:InformationExchangeID>250.04_SystemOperation</operation:InformationExchangeID>
			<xsl:for-each select="$var1_Facility/cobielite:AssetTypes">
				<cobielite:AssetTypes>
					<xsl:for-each select="ns1:AssetType">
						<xsl:variable name="var2_externalSystemName" as="node()?" select="@cobielite:externalSystemName"/>
						<xsl:variable name="var3_externalEntityName" as="node()?" select="@cobielite:externalEntityName"/>
						<xsl:variable name="var4_externalID" as="node()?" select="@cobielite:externalID"/>
						<operation:AssetType>
							<xsl:if test="fn:exists($var3_externalEntityName)">
								<xsl:attribute name="cobielite:externalEntityName" select="fn:string($var3_externalEntityName)"/>
							</xsl:if>
							<xsl:if test="fn:exists($var4_externalID)">
								<xsl:attribute name="cobielite:externalID" select="fn:string($var4_externalID)"/>
							</xsl:if>
							<xsl:if test="fn:exists($var2_externalSystemName)">
								<xsl:attribute name="cobielite:externalSystemName" select="fn:string($var2_externalSystemName)"/>
							</xsl:if>
							<cobielite:AssetTypeName>
								<xsl:sequence select="fn:string(cobielite:AssetTypeName)"/>
							</cobielite:AssetTypeName>
							<xsl:for-each select="cobielite:AssetTypeCategory">
								<cobielite:AssetTypeCategory>
									<xsl:sequence select="fn:string(.)"/>
								</cobielite:AssetTypeCategory>
							</xsl:for-each>
							<xsl:for-each select="cobielite:AssetTypeDescription">
								<cobielite:AssetTypeDescription>
									<xsl:sequence select="fn:string(.)"/>
								</cobielite:AssetTypeDescription>
							</xsl:for-each>
							<xsl:for-each select="cobielite:AssetTypeManufacturerContactAssignments">
								<cobielite:AssetTypeManufacturerContactAssignments>
									<xsl:sequence select="(./@node(), ./node())"/>
								</cobielite:AssetTypeManufacturerContactAssignments>
							</xsl:for-each>
							<xsl:for-each select="cobielite:AssetTypeModelNumber">
								<cobielite:AssetTypeModelNumber>
									<xsl:sequence select="fn:string(.)"/>
								</cobielite:AssetTypeModelNumber>
							</xsl:for-each>
							<xsl:for-each select="cobielite:Assets">
								<cobielite:Assets>
									<xsl:for-each select="ns0:Asset[fn:exists(cobielite:AssetSystemAssignments)]">
										<xsl:variable name="var5_externalSystemName" as="node()?" select="@cobielite:externalSystemName"/>
										<xsl:variable name="var6_externalEntityName" as="node()?" select="@cobielite:externalEntityName"/>
										<xsl:variable name="var7_externalID" as="node()?" select="@cobielite:externalID"/>
										<xsl:variable name="var8_resultof_first" as="node()" select="cobielite:AssetSpaceAssignments"/>
										<operation:Asset>
											<xsl:if test="fn:exists($var6_externalEntityName)">
												<xsl:attribute name="cobielite:externalEntityName" select="fn:string($var6_externalEntityName)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var7_externalID)">
												<xsl:attribute name="cobielite:externalID" select="fn:string($var7_externalID)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var5_externalSystemName)">
												<xsl:attribute name="cobielite:externalSystemName" select="fn:string($var5_externalSystemName)"/>
											</xsl:if>
											<cobielite:AssetName>
												<xsl:sequence select="fn:string(cobielite:AssetName)"/>
											</cobielite:AssetName>
											<cobielite:AssetSpaceAssignments>
												<xsl:sequence select="($var8_resultof_first/@node(), $var8_resultof_first/node())"/>
											</cobielite:AssetSpaceAssignments>
											<xsl:for-each select="cobielite:AssetDescription">
												<cobielite:AssetDescription>
													<xsl:sequence select="fn:string(.)"/>
												</cobielite:AssetDescription>
											</xsl:for-each>
											<xsl:for-each select="cobielite:AssetWarrantyStartDate">
												<cobielite:AssetWarrantyStartDate>
													<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
												</cobielite:AssetWarrantyStartDate>
											</xsl:for-each>
											<xsl:for-each select="cobielite:AssetSystemAssignments">
												<cobielite:AssetSystemAssignments>
													<xsl:sequence select="(./@node(), ./node())"/>
												</cobielite:AssetSystemAssignments>
											</xsl:for-each>
										</operation:Asset>
									</xsl:for-each>
								</cobielite:Assets>
							</xsl:for-each>
						</operation:AssetType>
					</xsl:for-each>
				</cobielite:AssetTypes>
			</xsl:for-each>
			<xsl:for-each select="$var1_Facility/cobielite:Floors">
				<cobielite:Floors>
					<xsl:for-each select="ns5:Floor[fn:exists(cobielite:Spaces)]">
						<xsl:variable name="var9_externalSystemName" as="node()?" select="@cobielite:externalSystemName"/>
						<xsl:variable name="var10_externalEntityName" as="node()?" select="@cobielite:externalEntityName"/>
						<xsl:variable name="var11_externalID" as="node()?" select="@cobielite:externalID"/>
						<operation:Floor>
							<xsl:if test="fn:exists($var10_externalEntityName)">
								<xsl:attribute name="cobielite:externalEntityName" select="fn:string($var10_externalEntityName)"/>
							</xsl:if>
							<xsl:if test="fn:exists($var11_externalID)">
								<xsl:attribute name="cobielite:externalID" select="fn:string($var11_externalID)"/>
							</xsl:if>
							<xsl:if test="fn:exists($var9_externalSystemName)">
								<xsl:attribute name="cobielite:externalSystemName" select="fn:string($var9_externalSystemName)"/>
							</xsl:if>
							<cobielite:FloorName>
								<xsl:sequence select="fn:string(cobielite:FloorName)"/>
							</cobielite:FloorName>
							<xsl:for-each select="cobielite:Spaces">
								<cobielite:Spaces>
									<xsl:for-each select="ns7:Space[fn:exists(cobielite:SpaceZoneAssignments)]">
										<xsl:variable name="var12_externalSystemName" as="node()?" select="@cobielite:externalSystemName"/>
										<xsl:variable name="var13_externalEntityName" as="node()?" select="@cobielite:externalEntityName"/>
										<xsl:variable name="var14_externalID" as="node()?" select="@cobielite:externalID"/>
										<operation:Space>
											<xsl:if test="fn:exists($var13_externalEntityName)">
												<xsl:attribute name="cobielite:externalEntityName" select="fn:string($var13_externalEntityName)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var14_externalID)">
												<xsl:attribute name="cobielite:externalID" select="fn:string($var14_externalID)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var12_externalSystemName)">
												<xsl:attribute name="cobielite:externalSystemName" select="fn:string($var12_externalSystemName)"/>
											</xsl:if>
											<cobielite:SpaceName>
												<xsl:sequence select="fn:string(cobielite:SpaceName)"/>
											</cobielite:SpaceName>
											<xsl:for-each select="cobielite:SpaceZoneAssignments">
												<cobielite:SpaceZoneAssignments>
													<xsl:sequence select="(./@node(), ./node())"/>
												</cobielite:SpaceZoneAssignments>
											</xsl:for-each>
										</operation:Space>
									</xsl:for-each>
								</cobielite:Spaces>
							</xsl:for-each>
						</operation:Floor>
					</xsl:for-each>
				</cobielite:Floors>
			</xsl:for-each>
			<xsl:for-each select="$var1_Facility/cobielite:Systems">
				<cobielite:Systems>
					<xsl:for-each select="ns8:System">
						<xsl:variable name="var15_externalSystemName" as="node()?" select="@cobielite:externalSystemName"/>
						<xsl:variable name="var16_externalEntityName" as="node()?" select="@cobielite:externalEntityName"/>
						<xsl:variable name="var17_externalID" as="node()?" select="@cobielite:externalID"/>
						<operation:System>
							<xsl:if test="fn:exists($var16_externalEntityName)">
								<xsl:attribute name="cobielite:externalEntityName" select="fn:string($var16_externalEntityName)"/>
							</xsl:if>
							<xsl:if test="fn:exists($var17_externalID)">
								<xsl:attribute name="cobielite:externalID" select="fn:string($var17_externalID)"/>
							</xsl:if>
							<xsl:if test="fn:exists($var15_externalSystemName)">
								<xsl:attribute name="cobielite:externalSystemName" select="fn:string($var15_externalSystemName)"/>
							</xsl:if>
							<cobielite:SystemName>
								<xsl:sequence select="fn:string(cobielite:SystemName)"/>
							</cobielite:SystemName>
							<cobielite:SystemCategory>
								<xsl:sequence select="fn:string(cobielite:SystemCategory)"/>
							</cobielite:SystemCategory>
							<xsl:for-each select="cobielite:SystemDescription">
								<cobielite:SystemDescription>
									<xsl:sequence select="fn:string(.)"/>
								</cobielite:SystemDescription>
							</xsl:for-each>
							<xsl:for-each select="cobielite:SystemAttributes">
								<cobielite:SystemAttributes>
									<xsl:for-each select="ns2:Attribute">
										<xsl:variable name="var18_propertySetExternalIdentifier" as="node()?" select="@cobielite:propertySetExternalIdentifier"/>
										<xsl:variable name="var19_propertySetName" as="node()?" select="@cobielite:propertySetName"/>
										<xsl:variable name="var20_externalSystemName" as="node()?" select="@cobielite:externalSystemName"/>
										<xsl:variable name="var21_externalEntityName" as="node()?" select="@cobielite:externalEntityName"/>
										<xsl:variable name="var22_externalID" as="node()?" select="@cobielite:externalID"/>
										<att:Attribute>
											<xsl:if test="fn:exists($var21_externalEntityName)">
												<xsl:attribute name="cobielite:externalEntityName" select="fn:string($var21_externalEntityName)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var22_externalID)">
												<xsl:attribute name="cobielite:externalID" select="fn:string($var22_externalID)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var20_externalSystemName)">
												<xsl:attribute name="cobielite:externalSystemName" select="fn:string($var20_externalSystemName)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var19_propertySetName)">
												<xsl:attribute name="cobielite:propertySetName" select="fn:string($var19_propertySetName)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var18_propertySetExternalIdentifier)">
												<xsl:attribute name="cobielite:propertySetExternalIdentifier" select="fn:string($var18_propertySetExternalIdentifier)"/>
											</xsl:if>
											<cobielite:AttributeName>
												<xsl:sequence select="fn:string(cobielite:AttributeName)"/>
											</cobielite:AttributeName>
											<cobielite:AttributeCategory>
												<xsl:sequence select="fn:string(cobielite:AttributeCategory)"/>
											</cobielite:AttributeCategory>
											<xsl:for-each select="cobielite:AttributeDescription">
												<cobielite:AttributeDescription>
													<xsl:sequence select="fn:string(.)"/>
												</cobielite:AttributeDescription>
											</xsl:for-each>
											<xsl:for-each select="cobielite:AttributeValue">
												<cobielite:AttributeValue>
													<xsl:sequence select="(./@node(), ./node())"/>
												</cobielite:AttributeValue>
											</xsl:for-each>
										</att:Attribute>
									</xsl:for-each>
								</cobielite:SystemAttributes>
							</xsl:for-each>
							<xsl:for-each select="cobielite:SystemDocuments">
								<cobielite:SystemDocuments>
									<xsl:for-each select="ns4:Document">
										<xsl:variable name="var23_externalSystemName" as="node()?" select="@cobielite:externalSystemName"/>
										<xsl:variable name="var24_externalEntityName" as="node()?" select="@cobielite:externalEntityName"/>
										<xsl:variable name="var25_externalID" as="node()?" select="@cobielite:externalID"/>
										<doc:Document>
											<xsl:if test="fn:exists($var24_externalEntityName)">
												<xsl:attribute name="cobielite:externalEntityName" select="fn:string($var24_externalEntityName)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var25_externalID)">
												<xsl:attribute name="cobielite:externalID" select="fn:string($var25_externalID)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var23_externalSystemName)">
												<xsl:attribute name="cobielite:externalSystemName" select="fn:string($var23_externalSystemName)"/>
											</xsl:if>
											<cobielite:DocumentName>
												<xsl:sequence select="fn:string(cobielite:DocumentName)"/>
											</cobielite:DocumentName>
											<xsl:for-each select="cobielite:DocumentCategory">
												<cobielite:DocumentCategory>
													<xsl:sequence select="fn:string(.)"/>
												</cobielite:DocumentCategory>
											</xsl:for-each>
											<xsl:for-each select="cobielite:DocumentDescription">
												<cobielite:DocumentDescription>
													<xsl:sequence select="fn:string(.)"/>
												</cobielite:DocumentDescription>
											</xsl:for-each>
											<xsl:for-each select="cobielite:DocumentURI">
												<cobielite:DocumentURI>
													<xsl:sequence select="fn:string(.)"/>
												</cobielite:DocumentURI>
											</xsl:for-each>
											<xsl:for-each select="cobielite:DocumentReferenceURI">
												<cobielite:DocumentReferenceURI>
													<xsl:sequence select="fn:string(.)"/>
												</cobielite:DocumentReferenceURI>
											</xsl:for-each>
										</doc:Document>
									</xsl:for-each>
								</cobielite:SystemDocuments>
							</xsl:for-each>
							<xsl:for-each select="cobielite:SystemIssues">
								<cobielite:SystemIssues>
									<xsl:for-each select="ns6:Issue">
										<issue:Issue>
											<xsl:call-template name="tbf:tbf1_IssueType">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</issue:Issue>
									</xsl:for-each>
								</cobielite:SystemIssues>
							</xsl:for-each>
						</operation:System>
					</xsl:for-each>
				</cobielite:Systems>
			</xsl:for-each>
			<xsl:for-each select="$var1_Facility/cobielite:Zones">
				<cobielite:Zones>
					<xsl:for-each select="ns9:Zone">
						<xsl:variable name="var26_externalSystemName" as="node()?" select="@cobielite:externalSystemName"/>
						<xsl:variable name="var27_externalEntityName" as="node()?" select="@cobielite:externalEntityName"/>
						<xsl:variable name="var28_externalID" as="node()?" select="@cobielite:externalID"/>
						<operation:Zone>
							<xsl:if test="fn:exists($var27_externalEntityName)">
								<xsl:attribute name="cobielite:externalEntityName" select="fn:string($var27_externalEntityName)"/>
							</xsl:if>
							<xsl:if test="fn:exists($var28_externalID)">
								<xsl:attribute name="cobielite:externalID" select="fn:string($var28_externalID)"/>
							</xsl:if>
							<xsl:if test="fn:exists($var26_externalSystemName)">
								<xsl:attribute name="cobielite:externalSystemName" select="fn:string($var26_externalSystemName)"/>
							</xsl:if>
							<cobielite:ZoneName>
								<xsl:sequence select="fn:string(cobielite:ZoneName)"/>
							</cobielite:ZoneName>
							<cobielite:ZoneCategory>
								<xsl:sequence select="fn:string(cobielite:ZoneCategory)"/>
							</cobielite:ZoneCategory>
							<xsl:for-each select="cobielite:ZoneDescription">
								<cobielite:ZoneDescription>
									<xsl:sequence select="fn:string(.)"/>
								</cobielite:ZoneDescription>
							</xsl:for-each>
							<xsl:for-each select="cobielite:ZoneAttributes">
								<cobielite:ZoneAttributes>
									<xsl:for-each select="ns2:Attribute">
										<xsl:variable name="var29_propertySetExternalIdentifier" as="node()?" select="@cobielite:propertySetExternalIdentifier"/>
										<xsl:variable name="var30_propertySetName" as="node()?" select="@cobielite:propertySetName"/>
										<xsl:variable name="var31_externalSystemName" as="node()?" select="@cobielite:externalSystemName"/>
										<xsl:variable name="var32_externalEntityName" as="node()?" select="@cobielite:externalEntityName"/>
										<xsl:variable name="var33_externalID" as="node()?" select="@cobielite:externalID"/>
										<att:Attribute>
											<xsl:if test="fn:exists($var32_externalEntityName)">
												<xsl:attribute name="cobielite:externalEntityName" select="fn:string($var32_externalEntityName)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var33_externalID)">
												<xsl:attribute name="cobielite:externalID" select="fn:string($var33_externalID)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var31_externalSystemName)">
												<xsl:attribute name="cobielite:externalSystemName" select="fn:string($var31_externalSystemName)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var30_propertySetName)">
												<xsl:attribute name="cobielite:propertySetName" select="fn:string($var30_propertySetName)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var29_propertySetExternalIdentifier)">
												<xsl:attribute name="cobielite:propertySetExternalIdentifier" select="fn:string($var29_propertySetExternalIdentifier)"/>
											</xsl:if>
											<cobielite:AttributeName>
												<xsl:sequence select="fn:string(cobielite:AttributeName)"/>
											</cobielite:AttributeName>
											<cobielite:AttributeCategory>
												<xsl:sequence select="fn:string(cobielite:AttributeCategory)"/>
											</cobielite:AttributeCategory>
											<xsl:for-each select="cobielite:AttributeDescription">
												<cobielite:AttributeDescription>
													<xsl:sequence select="fn:string(.)"/>
												</cobielite:AttributeDescription>
											</xsl:for-each>
											<xsl:for-each select="cobielite:AttributeValue">
												<cobielite:AttributeValue>
													<xsl:sequence select="(./@node(), ./node())"/>
												</cobielite:AttributeValue>
											</xsl:for-each>
										</att:Attribute>
									</xsl:for-each>
								</cobielite:ZoneAttributes>
							</xsl:for-each>
							<xsl:for-each select="cobielite:ZoneDocuments">
								<cobielite:ZoneDocuments>
									<xsl:for-each select="ns4:Document">
										<xsl:variable name="var34_externalSystemName" as="node()?" select="@cobielite:externalSystemName"/>
										<xsl:variable name="var35_externalEntityName" as="node()?" select="@cobielite:externalEntityName"/>
										<xsl:variable name="var36_externalID" as="node()?" select="@cobielite:externalID"/>
										<doc:Document>
											<xsl:if test="fn:exists($var35_externalEntityName)">
												<xsl:attribute name="cobielite:externalEntityName" select="fn:string($var35_externalEntityName)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var36_externalID)">
												<xsl:attribute name="cobielite:externalID" select="fn:string($var36_externalID)"/>
											</xsl:if>
											<xsl:if test="fn:exists($var34_externalSystemName)">
												<xsl:attribute name="cobielite:externalSystemName" select="fn:string($var34_externalSystemName)"/>
											</xsl:if>
											<cobielite:DocumentName>
												<xsl:sequence select="fn:string(cobielite:DocumentName)"/>
											</cobielite:DocumentName>
											<xsl:for-each select="cobielite:DocumentCategory">
												<cobielite:DocumentCategory>
													<xsl:sequence select="fn:string(.)"/>
												</cobielite:DocumentCategory>
											</xsl:for-each>
											<xsl:for-each select="cobielite:DocumentDescription">
												<cobielite:DocumentDescription>
													<xsl:sequence select="fn:string(.)"/>
												</cobielite:DocumentDescription>
											</xsl:for-each>
											<xsl:for-each select="cobielite:DocumentURI">
												<cobielite:DocumentURI>
													<xsl:sequence select="fn:string(.)"/>
												</cobielite:DocumentURI>
											</xsl:for-each>
											<xsl:for-each select="cobielite:DocumentReferenceURI">
												<cobielite:DocumentReferenceURI>
													<xsl:sequence select="fn:string(.)"/>
												</cobielite:DocumentReferenceURI>
											</xsl:for-each>
										</doc:Document>
									</xsl:for-each>
								</cobielite:ZoneDocuments>
							</xsl:for-each>
							<xsl:for-each select="cobielite:ZoneIssues">
								<cobielite:ZoneIssues>
									<xsl:for-each select="ns6:Issue">
										<issue:Issue>
											<xsl:call-template name="tbf:tbf1_IssueType">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</issue:Issue>
									</xsl:for-each>
								</cobielite:ZoneIssues>
							</xsl:for-each>
						</operation:Zone>
					</xsl:for-each>
				</cobielite:Zones>
			</xsl:for-each>
		</SystemOperation>
	</xsl:template>
</xsl:stylesheet>
