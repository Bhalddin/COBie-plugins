<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2013 rel. 2 (x64) (http://www.altova.com) by Jackie L Heriard (private) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://core.cobielite.cobie.erdc.org" xmlns:lcie="http://lcie.cobielite.cobie.erdc.org" xmlns:crud="http://crud.lcie.cobielite.cobie.erdc.org" targetNamespace="http://crud.lcie.cobielite.cobie.erdc.org" elementFormDefault="qualified" attributeFormDefault="qualified" version="RC3">
	<xs:import namespace="http://core.cobielite.cobie.erdc.org" schemaLocation="../../../COBieLite/xsd/common/cobielite_core.xsd"/>
	<xs:import namespace="http://lcie.cobielite.cobie.erdc.org" schemaLocation="../../SubSchema/lcie_abstract.xsd"/>
	<xs:complexType name="ClientRequestExchangeType" abstract="true">
		<xs:complexContent>
			<xs:extension base="crud:RequestType">
				<xs:sequence>
					<xs:choice>
						<xs:element ref="crud:CreateRequest"/>
						<xs:element ref="crud:ReadRequest"/>
						<xs:element ref="crud:ReadAllRequest"/>
						<xs:element ref="crud:UpdateRequest"/>
						<xs:element ref="crud:DeleteRequest"/>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ServerResponseExchangeType" abstract="true">
		<xs:choice>
			<xs:element ref="crud:CreateResult"/>
			<xs:element ref="crud:ReadResult"/>
			<xs:element ref="crud:ReadAllResult"/>
			<xs:element ref="crud:UpdateResult"/>
			<xs:element ref="crud:DeleteResult"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="RequestType" abstract="true">
		<xs:sequence>
			<xs:element ref="lcie:InformationExchangeID"/>
			<xs:element ref="crud:SessionToken"/>
			<xs:element ref="crud:UserID"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ResultType" abstract="true">
		<xs:sequence>
			<xs:element ref="lcie:InformationExchangeID"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CreateRequestType" abstract="true">
		<xs:sequence>
			<xs:element ref="crud:ProjectID"/>
			<xs:element ref="crud:CreateHandlerID"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CreateResultType">
		<xs:complexContent>
			<xs:extension base="crud:ResultType">
				<xs:sequence>
					<xs:element ref="crud:RevisionID">
						<xs:annotation>
							<xs:documentation>The new revision ID generated as a result of the successful create action.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="crud:CreateSuccess"/>
					<xs:element ref="crud:CreateResultMessage" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ReadRequestType">
		<xs:sequence>
			<xs:element ref="crud:RevisionID"/>
			<xs:element ref="crud:ReadHandlerID"/>
			<xs:element ref="crud:Key"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReadResultType" abstract="true">
		<xs:complexContent>
			<xs:extension base="crud:ResultType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ReadAllRequestType">
		<xs:sequence>
			<xs:element ref="crud:RevisionID"/>
			<xs:element ref="crud:ReadHandlerID"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReadAllResultType">
		<xs:sequence>
			<xs:element ref="crud:InformationExchange"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UpdateRequestType" abstract="true">
		<xs:sequence>
			<xs:element ref="crud:RevisionID"/>
			<xs:element ref="crud:UpdateHandlerID"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UpdateResultType">
		<xs:complexContent>
			<xs:extension base="crud:ResultType">
				<xs:sequence>
					<xs:element ref="crud:RevisionID">
						<xs:annotation>
							<xs:documentation>The new revision ID generated as a result of the successful update action.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="crud:UpdateSuccess"/>
					<xs:element ref="crud:UpdateResultMessage" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DeleteRequestType" abstract="true">
		<xs:sequence>
			<xs:element ref="crud:RevisionID"/>
			<xs:element ref="crud:DeleteHandlerID"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DeleteResultType">
		<xs:complexContent>
			<xs:extension base="crud:ResultType">
				<xs:sequence>
					<xs:element ref="crud:RevisionID">
						<xs:annotation>
							<xs:documentation>The new revision ID generated as a result of the successful delete action.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="crud:DeleteSuccess"/>
					<xs:element ref="crud:DeleteResultMessage" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Service Wrapper Elements -->
	<xs:element name="ProjectID" abstract="true">
		<xs:annotation>
			<xs:documentation>
				The ID associated with the project.  A project is the server item to which revisions are written.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="RevisionID" abstract="true">
		<xs:annotation>
			<xs:documentation>
				An ID associated with a specific Project revision.  RevisionIDs are required for all read requests and are returned by all create, update, and delete results.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SessionToken" abstract="true">
		<xs:annotation>
			<xs:documentation>
				Authentication token for the current session.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ReadHandlerID" abstract="true">
		<xs:annotation>
			<xs:documentation>
				An ID associated with a server-side handler that produces a transformed result of a project revision.  For example, this element corresponds to the Serializer object id in BIMSie.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CreateHandlerID" abstract="true">
		<xs:annotation>
			<xs:documentation>
				An ID associated with a server-side handler that handles a create request.  For example, this element corresponds to the Deserializer object id in BIMSie.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UpdateHandlerID" abstract="true">
		<xs:annotation>
			<xs:documentation>
				An ID associated with a server-side handler that handles an update request.  For example, this element corresponds to the Deserializer object id in BIMSie.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DeleteHandlerID" abstract="true">
		<xs:annotation>
			<xs:documentation>
				An ID associated with a server-side handler that handles a delete request.  For example, this element corresponds to the Deserializer object id in BIMSie.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UserID" abstract="true">
		<xs:annotation>
			<xs:documentation>
				The ID of the user associated with the current session.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!--	<xs:element name="CreateKey" type="CobieKeyType" abstract="true">
		<xs:annotation>
			<xs:documentation>
				The required key elements of the target LCie create object.
			</xs:documentation>
		</xs:annotation>
	</xs:element>-->
	<xs:element name="Key" type="CobieKeyType" abstract="true">
		<xs:annotation>
			<xs:documentation>
				The key corresponding to one particular LCie element or concept.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!--	<xs:element name="UpdateKey" type="CobieKeyType" abstract="true">
		<xs:annotation>
			<xs:documentation>
				The key corresponding to one particular LCie element or concept that will be updated.
			</xs:documentation>
		</xs:annotation>
	</xs:element>-->
	<!--	<xs:element name="DeleteKey" type="CobieKeyType" abstract="true">
		<xs:annotation>
			<xs:documentation>
				The key corresponding to one particular LCie element or concept that will be deleted.
			</xs:documentation>
		</xs:annotation>
	</xs:element>-->
	<xs:element name="CreateRequest" type="crud:CreateRequestType" abstract="true">
		<xs:annotation>
			<xs:documentation>
				A Request to create an LCie element.  Typically a Create request should correspond to an element with many children, e.g. the COBieLite Asset.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CreateResult" type="crud:CreateResultType">
		<xs:annotation>
			<xs:documentation>
				Results of the Create Request include the new revision ID, a boolean indicating success, and an optional message.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ReadRequest" type="crud:ReadRequestType">
		<xs:annotation>
			<xs:documentation>
				A ReadRequest must contain a ReadKey element.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ReadResult" type="crud:ReadResultType" abstract="true">
		<xs:annotation>
			<xs:documentation>
				The result of a ReadRequest will contain information relevant to one LCie concept.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ReadAllRequest" type="crud:ReadAllRequestType">
		<xs:annotation>
			<xs:documentation>
				Requires only credentials, a revisionID, and a ReadHandlerID.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ReadAllResult" type="crud:ReadAllResultType">
		<xs:annotation>
			<xs:documentation>
				The result of a ReadAllRequest will contain all items relvant to one LCie concept.  For example, a ProductTypeTemplate view of all AssetType elements in a model revision.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UpdateRequest" type="crud:UpdateRequestType" abstract="true">
		<xs:annotation>
			<xs:documentation>
				An UpdateRequest must have a RevisionID, an UpdateHandlerID, UpdateKey corresponding to an existing element in the project's latest revision, and a packet of information to update.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UpdateResult" type="crud:UpdateResultType">
		<xs:annotation>
			<xs:documentation>
				The result of an UpdateRequest will contain a new RevsisionID, a boolean indicating success or failure, and an optional message.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DeleteRequest" type="crud:DeleteRequestType" abstract="true">
		<xs:annotation>
			<xs:documentation>
				A delete request must contain a RevisionID, a DeleteHandlerID, and a DeleteKey corresponding to one LCie concept.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DeleteResult" type="crud:DeleteResultType">
		<xs:annotation>
			<xs:documentation>
				A DeleteResult must contain a new RevisionID, a boolean indicating success or failure, and an optional message.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="InformationExchange" type="lcie:InformationExchangeComplexType" abstract="true">
		<xs:annotation>
			<xs:documentation>
				An instance of an LCie information exchange.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CreateSuccess" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>
		Indicating success or failure of a CreateRequest.
	</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CreateResultMessage" type="xs:string">
		<xs:annotation>
			<xs:documentation>
		A server-provided message generated as confirmation of a handled CreateRequest.
	</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DeleteSuccess" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>
Indicates success or failure of a handled DeleteRequest.
	</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DeleteResultMessage" type="xs:string">
		<xs:annotation>
			<xs:documentation>
		A server-provided message generated as confirmation of a handled DeleteRequest.
	</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UpdateSuccess" type="xs:boolean">
		<xs:annotation>
			<xs:documentation>
		Indicates success or failure of a handled UpdateRequest.
	</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UpdateResultMessage" type="xs:string">
		<xs:annotation>
			<xs:documentation>
		A server-provided message generated as confirmation of a handled UpdateRequest.
	</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!--	<xs:element name="Update" abstract="true">
		<xs:annotation>
			<xs:documentation>The updated elements of an Update request.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Create" abstract="true">
		<xs:annotation>
			<xs:documentation>The new data packet of a create request.</xs:documentation>
		</xs:annotation>
	</xs:element>-->
</xs:schema>
